@mixin helperClasses($breakpointName, $breakpointSize) {
    // Shorthand Helpers
    $i: -20;

    @while $i <= 100 {
        .mt-#{$breakpointName}-#{$i} {
            @if ($breakpointName == 'xs') {
                margin-top: #{$i}px;
            } @else {
                @media (min-width: $breakpointSize) {
                    margin-top: #{$i}px;
                }
            }
        }

        .mb-#{$breakpointName}-#{$i} {
            @if ($breakpointName == 'xs') {
                margin-bottom: #{$i}px;
            } @else {
                @media (min-width: $breakpointSize) {
                    margin-bottom: #{$i}px;
                }
            }
        }

        .ml-#{$breakpointName}-#{$i} {
            @if ($breakpointName == 'xs') {
                margin-left: #{$i}px;
            } @else {
                @media (min-width: $breakpointSize) {
                    margin-left: #{$i}px;
                }
            }
        }

        .mr-#{$breakpointName}-#{$i} {
            @if ($breakpointName == 'xs') {
                margin-right: #{$i}px;
            } @else {
                @media (min-width: $breakpointSize) {
                    margin-right: #{$i}px;
                }
            }
        }

        .m-#{$breakpointName}-#{$i} {
            @if ($breakpointName == 'xs') {
                margin: #{$i}px;
            } @else {
                @media (min-width: $breakpointSize) {
                    margin: #{$i}px;
                }
            }
        }

        @if ($i >= 0) {
            .pt-#{$breakpointName}-#{$i} {
                @if ($breakpointName == 'xs') {
                    padding-top: #{$i}px;
                } @else {
                    @media (min-width: $breakpointSize) {
                        padding-top: #{$i}px;
                    }
                }
            }

            .pb-#{$breakpointName}-#{$i} {
                @if ($breakpointName == 'xs') {
                    padding-bottom: #{$i}px;
                } @else {
                    @media (min-width: $breakpointSize) {
                        padding-bottom: #{$i}px;
                    }
                }
            }

            .pl-#{$breakpointName}-#{$i} {
                @if ($breakpointName == 'xs') {
                    padding-left: #{$i}px;
                } @else {
                    @media (min-width: $breakpointSize) {
                        padding-left: #{$i}px;
                    }
                }
            }

            .pr-#{$breakpointName}-#{$i} {
                @if ($breakpointName == 'xs') {
                    padding-right: #{$i}px;
                } @else {
                    @media (min-width: $breakpointSize) {
                        padding-right: #{$i}px;
                    }
                }
            }

            .pl-percent-#{$breakpointName}-#{$i} {
                @if ($breakpointName == 'xs') {
                    padding-left: #{$i}#{'%'};
                } @else {
                    @media (min-width: $breakpointSize) {
                        padding-left: #{$i}#{'%'};
                    }
                }
            }

            .pr-percent-#{$breakpointName}-#{$i} {
                @if ($breakpointName == 'xs') {
                    padding-right: #{$i}#{'%'};
                } @else {
                    @media (min-width: $breakpointSize) {
                        padding-right: #{$i}#{'%'};
                    }
                }
            }

            .p-#{$breakpointName}-#{$i} {
                @if ($breakpointName == 'xs') {
                    padding: #{$i}px;
                } @else {
                    @media (min-width: $breakpointSize) {
                        padding: #{$i}px;
                    }
                }
            }

            .w-#{$breakpointName}-#{$i} {
                @if ($breakpointName == 'xs') {
                    width: #{$i}#{'%'};
                } @else {
                    @media (min-width: $breakpointSize) {
                        width: #{$i}#{'%'};
                    }
                }
            }

            .max-w-#{$breakpointName}-#{$i} {
                @if ($breakpointName == 'xs') {
                    max-width: #{$i}#{'%'};
                } @else {
                    @media (min-width: $breakpointSize) {
                        max-width: #{$i}#{'%'};
                    }
                }
            }

            .h-#{$breakpointName}-#{$i} {
                @if ($breakpointName == 'xs') {
                    height: #{$i}#{'%'};
                } @else {
                    @media (min-width: $breakpointSize) {
                        height: #{$i}#{'%'};
                    }
                }
            }
        }

        @if ($i < 10) {
            $i: $i + 1;
        } @else {
            $i: $i + 5;
        }
    }
    // Shorthand Helpers
}

@mixin helperGeneralResponsiveClasses($breakpointName, $breakpointSize) {
    .text-#{$breakpointName}-center {
        @if ($breakpointName == 'xs') {
            text-align: center;
        } @else {
            @media (min-width: $breakpointSize) {
                text-align: center;
            }
        }
    }

    .text-#{$breakpointName}-left {
        @if ($breakpointName == 'xs') {
            text-align: left;
        } @else {
            @media (min-width: $breakpointSize) {
                text-align: left;
            }
        }
    }

    .text-#{$breakpointName}-right {
        @if ($breakpointName == 'xs') {
            text-align: right;
        } @else {
            @media (min-width: $breakpointSize) {
                text-align: right;
            }
        }
    }

    .text-#{$breakpointName}-justify {
        @if ($breakpointName == 'xs') {
            text-align: justify;
        } @else {
            @media (min-width: $breakpointSize) {
                text-align: justify;
            }
        }
    }

    .ml-#{$breakpointName}-auto {
        @if ($breakpointName == 'xs') {
            margin-left: auto;
        } @else {
            @media (min-width: $breakpointSize) {
                margin-left: auto;
            }
        }
    }

    .mr-#{$breakpointName}-auto {
        @if ($breakpointName == 'xs') {
            margin-right: auto;
        } @else {
            @media (min-width: $breakpointSize) {
                margin-right: auto;
            }
        }
    }
}

@mixin helperDisplayFlex($breakpointName, $breakpointSize) {
    .df-#{$breakpointName} {

        @if ($breakpointName == 'xs') {
            display: flex;

            // Safari bug fix
            &:before, &:after {
                display: none;
            }

            @include displayFlex();
        } @else {
            @media (min-width: $breakpointSize) {
                display: flex;

                // Safari bug fix
                &:before, &:after {
                    display: none;
                }

                @include displayFlex();
            }
        }
    }
}

@mixin displayFlex () {
    &-inline-flex {
        display: inline-flex;
    }

    &-justify-content-center {
        justify-content: center;
    }

    &-justify-content-space-between {
        justify-content: space-between;
    }

    &-justify-content-space-around {
        justify-content: space-around;
    }

    &-justify-content-flex-start {
        justify-content: flex-start;
    }

    &-justify-content-flex-end {
        justify-content: flex-end;
    }

    &-align-items-center {
        align-items: center;
    }

    &-align-items-flex-start {
        align-items: flex-start;
    }

    &-align-items-flex-end {
        align-items: flex-end;
    }

    &-align-items-baseline {
        align-items: baseline;
    }

    &-align-items-stretch {
        align-items: stretch;
    }

    &-flex-wrap-wrap {
        flex-wrap: wrap;
    }

    &-flex-wrap-nowrap {
        flex-wrap: nowrap;
    }

    &-flex-wrap-wrap-reverse {
        flex-wrap: wrap-reverse;
    }

    &-flex-direction-row {
        flex-direction: row;
    }

    &-flex-direction-row-reverse {
        flex-direction: row-reverse;
    }

    &-flex-direction-column {
        flex-direction: column;
    }

    &-flex-direction-column-reverse {
        flex-direction: column-reverse;
    }
}

@mixin placeholder {
    &::-webkit-input-placeholder {
        @content;
    }

    &:-moz-placeholder { /* Firefox 18- */
        @content;
    }

    &::-moz-placeholder {  /* Firefox 19+ */
        @content;
    }

    &:-ms-input-placeholder {
        @content;
    }
}

@mixin triangle($direction, $width, $height, $color) {
    width: 0;
    height: 0;
    border-style: solid;

    @if $direction == top {
        border-width: 0 $width/2 $height $width/2;
        border-color: transparent transparent $color transparent;
    } @else if $direction == top {
        border-width: $height/2 0 $height/2 $width;
        border-color: transparent transparent transparent $color;
    } @else if $direction == bottom {
        border-width: $height $width/2 0 $width/2;
        border-color:  $color transparent transparent transparent;
    } @else {
        border-width: $height/2 $width $height/2 0;
        border-color: transparent $color transparent transparent;
    }
}


@mixin helperDisplayGrid($breakpointName, $breakpointSize) {
    .dg-#{$breakpointName} {
        @if ($breakpointName == 'xs') {
            display: grid;
        } @else {
            @media (min-width: $breakpointSize) {
                display: grid;

            }
        }
    }

    @if ($breakpointName == 'xs') {
        $x:10;
        @while $x>0{
            .dg-#{$breakpointName}-template-columns-#{$x}{
                grid-template-columns: repeat($x, 1fr);
            }
        $x: $x - 1;
        }
    } @else {
        @media (min-width: $breakpointSize) {
            $x:10;
            @while $x>0{
                .dg-#{$breakpointName}-template-columns-#{$x}{
                    grid-template-columns: repeat($x, 1fr);
                }
            $x: $x - 1;
            }
        }
    }

}

@for $i from 1 through 3 {
  .flex-#{$i} {
    flex: #{$i};
  }
}
